// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShiftService.Context;

namespace ShiftService.Migrations
{
    [DbContext(typeof(ShiftContext))]
    [Migration("20200607194018_ShiftMigration")]
    partial class ShiftMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.DataTransfer.Shift.Shift", b =>
                {
                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<int>("employeeSlots")
                        .HasColumnType("int");

                    b.Property<DateTime>("shiftDate")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Shifts");
                });

            modelBuilder.Entity("Common.DataTransfer.User", b =>
                {
                    b.Property<int>("id")
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("shiftId")
                        .HasColumnName("shiftId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnName("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id", "shiftId");

                    b.HasIndex("shiftId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Common.DataTransfer.User", b =>
                {
                    b.HasOne("Common.DataTransfer.Shift.Shift", null)
                        .WithMany("workingEmployees")
                        .HasForeignKey("shiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
